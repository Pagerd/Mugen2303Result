+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment!'
+ message='Start to prepare the test environment!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment!'
Wed Jun  7 10:32:33 2023 - INFO  - Start to prepare the test environment!
+ DNF_INSTALL libwmf
+ pkgs=libwmf
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs libwmf --node 1 --tempfile ''
+ tmpfile2=/tmp/tmp9z7rmcfj
+ '[' -z '' ']'
+ tmpfile=/tmp/tmp9z7rmcfj
+ for i in {1..8}
+ cp -f ./common/ant.wmf test1.wmf
+ for i in {1..8}
+ cp -f ./common/ant.wmf test2.wmf
+ for i in {1..8}
+ cp -f ./common/ant.wmf test3.wmf
+ for i in {1..8}
+ cp -f ./common/ant.wmf test4.wmf
+ for i in {1..8}
+ cp -f ./common/ant.wmf test5.wmf
+ for i in {1..8}
+ cp -f ./common/ant.wmf test6.wmf
+ for i in {1..8}
+ cp -f ./common/ant.wmf test7.wmf
+ for i in {1..8}
+ cp -f ./common/ant.wmf test8.wmf
+ LOG_INFO 'End to prepare the test environment!'
+ message='End to prepare the test environment!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment!'
Wed Jun  7 10:32:55 2023 - INFO  - End to prepare the test environment!
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test'
+ message='Start to run test'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test'
Wed Jun  7 10:32:56 2023 - INFO  - Start to run test
+ wmf2svg -z --auto test1.wmf
+ test -e test1.svgz
+ CHECK_RESULT 0 0 0 'option -z error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option -z error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --inline --auto test2.wmf
+ cat test2.svg
+ grep xml
<?xml version="1.0" standalone="no"?>
	xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd">
+ CHECK_RESULT 0 0 0 'option --inline error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --inline error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --desc=description --auto test3.wmf
+ cat test3.svg
+ grep description
<desc>description</desc>
+ CHECK_RESULT 0 0 0 'option --desc error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --desc error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --maxwidth=1200 --auto test4.wmf
+ cat test4.svg
+ grep polygon
<polygon points="361.871796,159.805115 
<polygon points="160.488693,71.249702 
<polygon points="356.682770,167.600494 
<polygon points="385.840057,179.761276 
<polygon points="445.637238,162.299637 
<polygon points="518.283386,65.013397 
<polygon points="489.867371,67.819733 
<polygon points="430.564392,116.774666 
<polygon points="406.349030,117.086479 
<polygon points="341.857025,182.879410 
<polygon points="296.144287,189.115723 
<polygon points="143.192001,86.840446 
<polygon points="146.898438,45.369068 
<polygon points="623.299072,201.588303 
<polygon points="145.415863,143.902573 
+ CHECK_RESULT 0 0 0 'option --maxwidth error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --maxwidth error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --maxheight=1200 --auto test5.wmf
+ cat test5.svg
+ grep polygon
<polygon points="353.135376,155.747559 
<polygon points="156.614136,69.440628 
<polygon points="348.071625,163.345016 
<polygon points="376.524994,175.197021 
<polygon points="434.878510,158.178741 
<polygon points="505.770844,63.362667 
<polygon points="478.040833,66.097748 
<polygon points="420.169556,113.809677 
<polygon points="396.538818,114.113579 
<polygon points="333.603790,178.235992 
<polygon points="288.994690,184.313965 
<polygon points="139.735016,84.635513 
<polygon points="143.351974,44.217117 
<polygon points="608.251221,196.469849 
<polygon points="141.905197,140.248795 
+ CHECK_RESULT 0 0 0 'option --maxheight error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --maxheight error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --maxpect --auto test6.wmf
+ test -e test6.svg
+ CHECK_RESULT 0 0 0 'option --maxpect error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --maxpect error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --maxsize --auto test7.wmf
+ test -e test7.svg
+ CHECK_RESULT 0 0 0 'option --maxsize error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --maxsize error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --version
+ grep libwmf
libwmf: version 0.2.12
+ CHECK_RESULT 0 0 0 'option --version error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --version error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --help
+ grep Usage
Usage: wmf2svg [OPTION]... [-o <file.svg>] <file.wmf>
+ CHECK_RESULT 0 0 0 'option --help error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --help error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2svg --wmf-error=yes --auto test8.wmf
+ test -e test8.svg
+ CHECK_RESULT 0 0 0 'option --wmf-error error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --wmf-error error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End of test'
+ message='End of test'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of test'
Wed Jun  7 10:32:56 2023 - INFO  - End of test
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Wed Jun  7 10:32:57 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'start environment cleanup.'
+ message='start environment cleanup.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'start environment cleanup.'
Wed Jun  7 10:32:57 2023 - INFO  - start environment cleanup.
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmp9z7rmcfj ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmp9z7rmcfj
+ '[' 0 -ne 0 ']'
+ rm -rf ./test1.svgz ./test1.wmf ./test2.svg ./test2.wmf ./test3.svg ./test3.wmf ./test4.svg ./test4.wmf ./test5.svg ./test5.wmf ./test6.svg ./test6.wmf ./test7.svg ./test7.wmf ./test8.svg ./test8.wmf
+ LOG_INFO 'Finish environment cleanup!'
+ message='Finish environment cleanup!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish environment cleanup!'
Wed Jun  7 10:33:03 2023 - INFO  - Finish environment cleanup!
