+ source ../common/common_javapackages-tools.sh
++ source /root/mugen/libs/locallibs/common_lib.sh
+++ python3 --version
+++ '[' 0 -eq 0 ']'
+++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Fri Jun  2 05:38:10 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL tar
+ pkgs=tar
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs tar --node 1 --tempfile ''
Fri Jun  2 05:38:26 2023 - INFO  - pkgs:(tar) is already installed
+ tmpfile2=
+ '[' -z '' ']'
+ tmpfile=
+ deploy_env
+ DNF_INSTALL junit
+ pkgs=junit
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs junit --node 1 --tempfile ''
+ tmpfile2=/tmp/tmpa_2oggr5
+ '[' -z '' ']'
+ tmpfile=/tmp/tmpa_2oggr5
++ rpm -qa 'java*'
++ grep 'java-.*-openjdk'
++ awk -F - '{print $2}'
+ java_version=1.8.0
+ DNF_INSTALL 'javapackages-tools java-1.8.0-devel xmvn-resolve objectweb-asm3 beust-jcommander log4j'
+ pkgs='javapackages-tools java-1.8.0-devel xmvn-resolve objectweb-asm3 beust-jcommander log4j'
+ node=1
+ '[' -z /tmp/tmpa_2oggr5 ']'
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs 'javapackages-tools java-1.8.0-devel xmvn-resolve objectweb-asm3 beust-jcommander log4j' --node 1 --tempfile /tmp/tmpa_2oggr5
+ tmpfile2='Last metadata expiration check: 0:01:39 ago on Fri 02 Jun 2023 05:38:25 AM CST.
Package javapackages-tools-5.3.0-5.oe2303.noarch is already installed.
Error: 
 Problem: conflicting requests
  - nothing provides mvn(com.fasterxml.jackson.core:jackson-databind) needed by log4j-2.17.2-1.oe2303.noarch
(try to add '\''--skip-broken'\'' to skip uninstallable packages or '\''--nobest'\'' to use not only best candidate packages)'
+ '[' -z /tmp/tmpa_2oggr5 ']'
+ LOG_INFO 'Finish preparing the test environment.'
+ message='Finish preparing the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish preparing the test environment.'
Fri Jun  2 05:40:06 2023 - INFO  - Finish preparing the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Fri Jun  2 05:40:07 2023 - INFO  - Start to run test.
+ mkdir hello
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ cp /usr/share/java/easymock3.jar /usr/share/java/easymock3-test-java8.jar /usr/share/java/easymock3-test-testng.jar /usr/share/java/easymock.jar /usr/share/java/easymock-test-java8.jar /usr/share/java/easymock-test-testng.jar /usr/share/java/junit.jar /usr/share/java/qdox.jar hello/
+ echo 'public class Hello{
    public static void main(String[] args){
        System.out.println("Hello java!");
    }
}'
+ tar cvzf hello.tar.gz hello
hello/
hello/easymock-test-java8.jar
hello/easymock3.jar
hello/Hello.java
hello/easymock3-test-testng.jar
hello/junit.jar
hello/easymock.jar
hello/qdox.jar
hello/easymock-test-testng.jar
hello/easymock3-test-java8.jar
+ test -f hello.tar.gz
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ touch exclusion
+ clean-binary-files -e exclusion -l -a hello.tar.gz
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ grep 'remove hello/' instructions
remove hello/easymock3-test-java8.jar
remove hello/easymock-test-testng.jar
remove hello/qdox.jar
remove hello/easymock.jar
remove hello/junit.jar
remove hello/easymock3-test-testng.jar
remove hello/easymock3.jar
remove hello/easymock-test-java8.jar
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ test -f hello-clean.tar.gz
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ check-binary-files -f instructions -a hello-clean.tar.gz
+ grep ERROR
ERROR: File hello/easymock3-test-java8.jar should not exist, but does.
ERROR: File hello/easymock-test-testng.jar should not exist, but does.
ERROR: File hello/qdox.jar should not exist, but does.
ERROR: File hello/easymock.jar should not exist, but does.
ERROR: File hello/junit.jar should not exist, but does.
ERROR: File hello/easymock3-test-testng.jar should not exist, but does.
ERROR: File hello/easymock3.jar should not exist, but does.
ERROR: File hello/easymock-test-java8.jar should not exist, but does.
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rm -rf hello-clean.tar.gz
+ clean-binary-files -f instructions -n -a hello.tar.gz
+ grep 'rm -f "hello/'
rm -f "hello/easymock3-test-java8.jar"
rm -f "hello/easymock-test-testng.jar"
rm -f "hello/qdox.jar"
rm -f "hello/easymock.jar"
rm -f "hello/junit.jar"
rm -f "hello/easymock3-test-testng.jar"
rm -f "hello/easymock3.jar"
rm -f "hello/easymock-test-java8.jar"
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ test -f hello-clean.tar.gz
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ check-binary-files -f instructions -a hello-clean.tar.gz
+ grep ERROR
+ CHECK_RESULT 1 1
+ actual_result=1
+ expect_result=1
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 1x
+ return 0
+ test -f hello-clean-clean.tar.gz
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ mv hello hello_old
+ tar zxvf hello-clean-clean.tar.gz
hello/
hello/Hello.java
+ test -d hello
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ create-jar-links -f instructions
+ grep 'build-jar-repository -s'
build-jar-repository -s  hello easymock3-test-java8
build-jar-repository -s  hello easymock-test-testng
build-jar-repository -s  hello qdox
build-jar-repository -s  hello easymock
build-jar-repository -s  hello junit
build-jar-repository -s  hello easymock3-test-testng
build-jar-repository -s  hello easymock3
build-jar-repository -s  hello easymock-test-java8
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ls -l hello
+ grep '].jar -> /usr/share/java/'
lrwxrwxrwx 1 root root  29 Jun  2 05:40 [easymock3].jar -> /usr/share/java/easymock3.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 [easymock3-test-java8].jar -> /usr/share/java/easymock3-test-java8.jar
lrwxrwxrwx 1 root root  41 Jun  2 05:40 [easymock3-test-testng].jar -> /usr/share/java/easymock3-test-testng.jar
lrwxrwxrwx 1 root root  28 Jun  2 05:40 [easymock].jar -> /usr/share/java/easymock.jar
lrwxrwxrwx 1 root root  39 Jun  2 05:40 [easymock-test-java8].jar -> /usr/share/java/easymock-test-java8.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 [easymock-test-testng].jar -> /usr/share/java/easymock-test-testng.jar
lrwxrwxrwx 1 root root  25 Jun  2 05:40 [junit].jar -> /usr/share/java/junit.jar
lrwxrwxrwx 1 root root  24 Jun  2 05:40 [qdox].jar -> /usr/share/java/qdox.jar
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ create-jar-links -f instructions -a hello-clean-clean.tar.gz
+ grep 'build-jar-repository -s'
build-jar-repository -s  hello easymock3-test-java8
build-jar-repository -s  hello easymock-test-testng
build-jar-repository -s  hello qdox
build-jar-repository -s  hello easymock
build-jar-repository -s  hello junit
build-jar-repository -s  hello easymock3-test-testng
build-jar-repository -s  hello easymock3
build-jar-repository -s  hello easymock-test-java8
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ test -f hello-clean-clean-clean.tar.gz
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ mv hello hello_old2
+ tar zxvf hello-clean-clean-clean.tar.gz
hello/
hello/[easymock-test-java8].jar
hello/[easymock3].jar
hello/[easymock3-test-testng].jar
hello/[junit].jar
hello/[easymock].jar
hello/[qdox].jar
hello/[easymock-test-testng].jar
hello/[easymock3-test-java8].jar
hello/Hello.java
+ ls -l hello
+ grep '].jar -> /usr/share/java/'
lrwxrwxrwx 1 root root  29 Jun  2 05:40 [easymock3].jar -> /usr/share/java/easymock3.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 [easymock3-test-java8].jar -> /usr/share/java/easymock3-test-java8.jar
lrwxrwxrwx 1 root root  41 Jun  2 05:40 [easymock3-test-testng].jar -> /usr/share/java/easymock3-test-testng.jar
lrwxrwxrwx 1 root root  28 Jun  2 05:40 [easymock].jar -> /usr/share/java/easymock.jar
lrwxrwxrwx 1 root root  39 Jun  2 05:40 [easymock-test-java8].jar -> /usr/share/java/easymock-test-java8.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 [easymock-test-testng].jar -> /usr/share/java/easymock-test-testng.jar
lrwxrwxrwx 1 root root  25 Jun  2 05:40 [junit].jar -> /usr/share/java/junit.jar
lrwxrwxrwx 1 root root  24 Jun  2 05:40 [qdox].jar -> /usr/share/java/qdox.jar
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ create-jar-links -f instructions -p
build-jar-repository -s -p hello easymock3-test-java8
build-jar-repository -s -p hello easymock-test-testng
build-jar-repository -s -p hello qdox
build-jar-repository -s -p hello easymock
build-jar-repository -s -p hello junit
build-jar-repository -s -p hello easymock3-test-testng
build-jar-repository -s -p hello easymock3
build-jar-repository -s -p hello easymock-test-java8
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ ls -l hello
+ grep -E '].jar -> /usr/share/java/|.jar -> /usr/share/java/'
lrwxrwxrwx 1 root root  29 Jun  2 05:40 easymock3.jar -> /usr/share/java/easymock3.jar
lrwxrwxrwx 1 root root  29 Jun  2 05:40 [easymock3].jar -> /usr/share/java/easymock3.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 easymock3-test-java8.jar -> /usr/share/java/easymock3-test-java8.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 [easymock3-test-java8].jar -> /usr/share/java/easymock3-test-java8.jar
lrwxrwxrwx 1 root root  41 Jun  2 05:40 [easymock3-test-testng].jar -> /usr/share/java/easymock3-test-testng.jar
lrwxrwxrwx 1 root root  41 Jun  2 05:40 easymock3-test-testng.jar -> /usr/share/java/easymock3-test-testng.jar
lrwxrwxrwx 1 root root  28 Jun  2 05:40 [easymock].jar -> /usr/share/java/easymock.jar
lrwxrwxrwx 1 root root  28 Jun  2 05:40 easymock.jar -> /usr/share/java/easymock.jar
lrwxrwxrwx 1 root root  39 Jun  2 05:40 easymock-test-java8.jar -> /usr/share/java/easymock-test-java8.jar
lrwxrwxrwx 1 root root  39 Jun  2 05:40 [easymock-test-java8].jar -> /usr/share/java/easymock-test-java8.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 [easymock-test-testng].jar -> /usr/share/java/easymock-test-testng.jar
lrwxrwxrwx 1 root root  40 Jun  2 05:40 easymock-test-testng.jar -> /usr/share/java/easymock-test-testng.jar
lrwxrwxrwx 1 root root  25 Jun  2 05:40 [junit].jar -> /usr/share/java/junit.jar
lrwxrwxrwx 1 root root  25 Jun  2 05:40 junit.jar -> /usr/share/java/junit.jar
lrwxrwxrwx 1 root root  24 Jun  2 05:40 [qdox].jar -> /usr/share/java/qdox.jar
lrwxrwxrwx 1 root root  24 Jun  2 05:40 qdox.jar -> /usr/share/java/qdox.jar
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ rm -rf hello-clean-clean-clean.tar.gz
+ create-jar-links -f instructions -p -a hello-clean-clean.tar.gz
build-jar-repository -s -p hello easymock3-test-java8
build-jar-repository -s -p hello easymock-test-testng
build-jar-repository -s -p hello qdox
build-jar-repository -s -p hello easymock
build-jar-repository -s -p hello junit
build-jar-repository -s -p hello easymock3-test-testng
build-jar-repository -s -p hello easymock3
build-jar-repository -s -p hello easymock-test-java8
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ test -f hello-clean-clean-clean.tar.gz
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ diff-jars /usr/share/java/easymock.jar /usr/share/java/junit.jar
+ grep +org/
/usr/bin/diff-jars: line 53: /usr/lib/jvm/jre-1.8.0-openjdk/bin/jar: No such file or directory
/usr/bin/diff-jars: line 54: /usr/lib/jvm/jre-1.8.0-openjdk/bin/jar: No such file or directory
+ CHECK_RESULT 1
+ actual_result=1
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 0x
+ test -n ''
+ (( exec_result++ ))
+ LOG_ERROR 'oe_test_binary_files_operation.sh line 86'
+ message='oe_test_binary_files_operation.sh line 86'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level error --message 'oe_test_binary_files_operation.sh line 86'
Fri Jun  2 05:40:46 2023 - ERROR - oe_test_binary_files_operation.sh line 86
+ '[' 0 -eq 1 ']'
+ return 0
+ LOG_INFO 'End of the test.'
+ message='End of the test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of the test.'
Fri Jun  2 05:40:46 2023 - INFO  - End of the test.
+ CASE_RESULT 0
+ case_re=0
+ test -z 1
+ test 1 -gt 0
+ LOG_ERROR 'failed to execute the case.'
+ message='failed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level error --message 'failed to execute the case.'
Fri Jun  2 05:40:47 2023 - ERROR - failed to execute the case.
+ exit 1
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Fri Jun  2 05:40:48 2023 - INFO  - Start to restore the test environment.
+ clear_env
++ ls
++ grep -v .sh
+ roc='exclusion
hello
hello-clean-clean-clean.tar.gz
hello-clean-clean.tar.gz
hello-clean.tar.gz
hello_old
hello_old2
hello.tar.gz
instructions'
+ rm -rf exclusion hello hello-clean-clean-clean.tar.gz hello-clean-clean.tar.gz hello-clean.tar.gz hello_old hello_old2 hello.tar.gz instructions
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmpa_2oggr5 ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmpa_2oggr5
+ '[' 0 -ne 0 ']'
+ LOG_INFO 'Finish restoring the test environment.'
+ message='Finish restoring the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish restoring the test environment.'
Fri Jun  2 05:41:03 2023 - INFO  - Finish restoring the test environment.
