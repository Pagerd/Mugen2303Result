+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Fri May  5 01:34:45 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL rubygem-bundler
+ pkgs=rubygem-bundler
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs rubygem-bundler --node 1 --tempfile ''
+ tmpfile2=/tmp/tmpuz074l4m
+ '[' -z '' ']'
+ tmpfile=/tmp/tmpuz074l4m
+ bundle init
Writing new Gemfile to /root/mugen/testcases/cli-test/rubygem-bundler/Gemfile
+ LOG_INFO 'End to prepare the test environment.'
+ message='End to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment.'
Fri May  5 01:35:26 2023 - INFO  - End to prepare the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Fri May  5 01:35:27 2023 - INFO  - Start to run test.
+ expect
spawn bundle gem testgem01 --coc
y
[32mCreating gem 'testgem01'...[0m
[32mDo you want to generate tests with your gem?[0m
Future `bundle gem` calls will use your choice. This setting can be changed anytime with `bundle config gem.test`.
Enter a test framework. rspec/minitest/test-unit/(none): y
[32mDo you want to set up continuous integration for your gem? Supported services:
* CircleCI:       https://circleci.com/
* GitHub Actions: https://github.com/features/actions
* GitLab CI:      https://docs.gitlab.com/ee/ci/
* Travis CI:      https://travis-ci.org/

[0mFuture `bundle gem` calls will use your choice. This setting can be changed anytime with `bundle config gem.ci`.
Enter a CI service. github/travis/gitlab/circle/(none): + SLEEP_WAIT 5
+ wait_time=5
+ cmd=
+ mode=1
+ python3 /root/mugen/libs/locallibs/sleep_wait.py --time 5 --cmd '' --mode 1
+ grep CODE_OF_CONDUCT.md bundle_log
+ CHECK_RESULT 1 0 0 'Check gem testgem --coc failed.'
+ actual_result=1
+ expect_result=0
+ mode=0
+ error_log='Check gem testgem --coc failed.'
+ exit_mode=0
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 0x
+ test -n 'Check gem testgem --coc failed.'
+ LOG_ERROR 'Check gem testgem --coc failed.'
+ message='Check gem testgem --coc failed.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level error --message 'Check gem testgem --coc failed.'
Fri May  5 01:35:43 2023 - ERROR - Check gem testgem --coc failed.
+ (( exec_result++ ))
+ LOG_ERROR 'oe_test_rubygem-bundler_bundle_02.sh line 38'
+ message='oe_test_rubygem-bundler_bundle_02.sh line 38'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level error --message 'oe_test_rubygem-bundler_bundle_02.sh line 38'
Fri May  5 01:35:43 2023 - ERROR - oe_test_rubygem-bundler_bundle_02.sh line 38
+ '[' 0 -eq 1 ']'
+ return 0
+ expect
spawn bundle gem testgem02 --ext
y
[32mCreating gem 'testgem02'...[0m
[32mDo you want to set up continuous integration for your gem? Supported services:
* CircleCI:       https://circleci.com/
* GitHub Actions: https://github.com/features/actions
* GitLab CI:      https://docs.gitlab.com/ee/ci/
* Travis CI:      https://travis-ci.org/

[0mFuture `bundle gem` calls will use your choice. This setting can be changed anytime with `bundle config gem.ci`.
Enter a CI service. github/travis/gitlab/circle/(none): y
[32mDo you want to license your code permissively under the MIT license?[0m
<at https://choosealicense.com/licenses/mit. y/(n): + grep ext bundle_log2
spawn bundle gem testgem02 --ext
+ CHECK_RESULT 0 0 0 'Check gem testgem --ext failed.'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check gem testgem --ext failed.'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bundle gem testgem03 --no-ext
+ grep ext
Fri May  5 02:04:44 2023 - ERROR - Timeout : Command 'bash -x oe_test_rubygem-bundler_bundle_02.sh' timed out after 1799.99959154 seconds
