+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n function ']'
+ config_params
+ LOG_INFO 'Start to config params of the case.'
+ message='Start to config params of the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to config params of the case.'
Wed Jul 19 03:16:41 2023 - INFO  - Start to config params of the case.
+ TMP_DIR=./tmp
+ LOG_INFO 'End to config params of the case.'
+ message='End to config params of the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to config params of the case.'
Wed Jul 19 03:16:42 2023 - INFO  - End to config params of the case.
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Wed Jul 19 03:16:42 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL 'asciidoc fop'
+ pkgs='asciidoc fop'
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs 'asciidoc fop' --node 1 --tempfile ''
+ tmpfile2=/tmp/tmpb4drcvpi
+ '[' -z '' ']'
+ tmpfile=/tmp/tmpb4drcvpi
+ mkdir ./tmp
+ LOG_INFO 'End to prepare the test environment.'
+ message='End to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment.'
Wed Jul 19 03:21:40 2023 - INFO  - End to prepare the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Wed Jul 19 03:21:40 2023 - INFO  - Start to run test.
+ a2x -f xhtml '--xsltproc-opts=--stringparam page.margin.inner 10cm' -D ./tmp/ common/test.adoc
+ ' '
oe_test_asciidoc_a2x_03.sh: line 37:  : command not found
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x --xsltproc-opts failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --xsltproc-opts failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x -f xhtml --xsl-file=common/xsl/test.xsl -D ./tmp/ common/test.adoc
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x --xsl-file failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --xsl-file failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --icons -f xhtml -D ./tmp/ common/test.adoc
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x --icons failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --icons failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x -f xhtml --icons-dir=common/icons_test/ -D ./tmp/ common/test.adoc
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x --icons-dir failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --icons-dir failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ for format in "xhtml" "epub" "docbook" "chunked" "htmlhelp" "manpage"
+ a2x -v -f xhtml -D ./tmp/ common/test.adoc
a2x: args: ['-v', '-f', 'xhtml', '-D', './tmp/', 'common/test.adoc']
a2x: resource files: []
a2x: resource directories: ['/etc/asciidoc/images', '/etc/asciidoc/stylesheets']
a2x: executing: "/usr/bin/asciidoc.py" --backend docbook -a "a2x-format=xhtml"  --verbose  --out-file "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml" "/root/mugen/testcases/cli-test/asciidoc/common/test.adoc"

asciidoc: reading: /etc/asciidoc/asciidoc.conf
asciidoc: reading: /root/mugen/testcases/cli-test/asciidoc/common/test.adoc
asciidoc: reading: /etc/asciidoc/docbook45.conf
asciidoc: reading: /etc/asciidoc/filters/source/source-highlight-filter.conf
asciidoc: reading: /etc/asciidoc/filters/graphviz/graphviz-filter.conf
asciidoc: reading: /etc/asciidoc/filters/latex/latex-filter.conf
asciidoc: reading: /etc/asciidoc/filters/music/music-filter.conf
asciidoc: reading: /etc/asciidoc/filters/code/code-filter.conf
asciidoc: reading: /etc/asciidoc/lang-en.conf
asciidoc: writing: /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml

a2x: executing: "xmllint" --nonet --noout --valid "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"


a2x: chdir /root/mugen/testcases/cli-test/asciidoc/tmp
a2x: executing: "xsltproc"  --stringparam callout.graphics 0 --stringparam navig.graphics 0 --stringparam admon.textlabel 1 --stringparam admon.graphics 0  --output "/root/mugen/testcases/cli-test/asciidoc/tmp/test.html" "/etc/asciidoc/docbook-xsl/xhtml.xsl" "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"


a2x: chdir /root/mugen/testcases/cli-test/asciidoc
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.html
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.html
a2x: copying "/etc/asciidoc/stylesheets/docbook-xsl.css" to "/root/mugen/testcases/cli-test/asciidoc/tmp/docbook-xsl.css"
a2x: deleting /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml
+ CHECK_RESULT 0 0 0 'Check a2x -f xhtml failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -f xhtml failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --format xhtml -D ./tmp/ common/test.adoc
+ CHECK_RESULT 0 0 0 'Check a2x --format xhtml failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --format xhtml failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ for format in "xhtml" "epub" "docbook" "chunked" "htmlhelp" "manpage"
+ a2x -v -f epub -D ./tmp/ common/test.adoc
a2x: args: ['-v', '-f', 'epub', '-D', './tmp/', 'common/test.adoc']
a2x: resource files: []
a2x: resource directories: ['/etc/asciidoc/images', '/etc/asciidoc/stylesheets']
a2x: executing: "/usr/bin/asciidoc.py" --backend docbook -a "a2x-format=epub"  --verbose  --out-file "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml" "/root/mugen/testcases/cli-test/asciidoc/common/test.adoc"

asciidoc: reading: /etc/asciidoc/asciidoc.conf
asciidoc: reading: /root/mugen/testcases/cli-test/asciidoc/common/test.adoc
asciidoc: reading: /etc/asciidoc/docbook45.conf
asciidoc: reading: /etc/asciidoc/filters/source/source-highlight-filter.conf
asciidoc: reading: /etc/asciidoc/filters/graphviz/graphviz-filter.conf
asciidoc: reading: /etc/asciidoc/filters/latex/latex-filter.conf
asciidoc: reading: /etc/asciidoc/filters/music/music-filter.conf
asciidoc: reading: /etc/asciidoc/filters/code/code-filter.conf
asciidoc: reading: /etc/asciidoc/lang-en.conf
asciidoc: writing: /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml

a2x: executing: "xmllint" --nonet --noout --valid "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"


a2x: creating /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d
a2x: chdir /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d
a2x: executing: "xsltproc"  --stringparam callout.graphics 0 --stringparam navig.graphics 0 --stringparam admon.textlabel 1 --stringparam admon.graphics 0  "/etc/asciidoc/docbook-xsl/epub.xsl" "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"

Writing OEBPS/index.html for refentry
Writing OEBPS/toc.ncx
Writing OEBPS/../OEBPS/content.opf
Writing OEBPS/../META-INF/container.xml

a2x: chdir /root/mugen/testcases/cli-test/asciidoc
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d/OEBPS/content.opf
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d/OEBPS/index.html
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d/OEBPS/index.html
a2x: copying "/etc/asciidoc/stylesheets/docbook-xsl.css" to "/root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d/OEBPS/docbook-xsl.css"
a2x: chdir /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d
a2x: archiving: mimetype
a2x: archiving: OEBPS/toc.ncx
a2x: archiving: OEBPS/content.opf
a2x: archiving: OEBPS/index.html
a2x: archiving: OEBPS/docbook-xsl.css
a2x: archiving: META-INF/container.xml
a2x: created archive: /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub
a2x: chdir /root/mugen/testcases/cli-test/asciidoc
a2x: deleting /root/mugen/testcases/cli-test/asciidoc/tmp/test.epub.d
a2x: deleting /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml
+ CHECK_RESULT 0 0 0 'Check a2x -f epub failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -f epub failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --format epub -D ./tmp/ common/test.adoc
+ CHECK_RESULT 0 0 0 'Check a2x --format epub failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --format epub failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ for format in "xhtml" "epub" "docbook" "chunked" "htmlhelp" "manpage"
+ a2x -v -f docbook -D ./tmp/ common/test.adoc
a2x: WARNING: --destination-dir option is only applicable to HTML and manpage based outputs

a2x: args: ['-v', '-f', 'docbook', '-D', './tmp/', 'common/test.adoc']
a2x: resource files: []
a2x: resource directories: ['/etc/asciidoc/images', '/etc/asciidoc/stylesheets']
a2x: executing: "/usr/bin/asciidoc.py" --backend docbook -a "a2x-format=docbook"  --verbose  --out-file "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml" "/root/mugen/testcases/cli-test/asciidoc/common/test.adoc"

asciidoc: reading: /etc/asciidoc/asciidoc.conf
asciidoc: reading: /root/mugen/testcases/cli-test/asciidoc/common/test.adoc
asciidoc: reading: /etc/asciidoc/docbook45.conf
asciidoc: reading: /etc/asciidoc/filters/source/source-highlight-filter.conf
asciidoc: reading: /etc/asciidoc/filters/graphviz/graphviz-filter.conf
asciidoc: reading: /etc/asciidoc/filters/latex/latex-filter.conf
asciidoc: reading: /etc/asciidoc/filters/music/music-filter.conf
asciidoc: reading: /etc/asciidoc/filters/code/code-filter.conf
asciidoc: reading: /etc/asciidoc/lang-en.conf
asciidoc: writing: /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml

a2x: executing: "xmllint" --nonet --noout --valid "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"


+ CHECK_RESULT 0 0 0 'Check a2x -f docbook failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -f docbook failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --format docbook -D ./tmp/ common/test.adoc
a2x: WARNING: --destination-dir option is only applicable to HTML and manpage based outputs

+ CHECK_RESULT 0 0 0 'Check a2x --format docbook failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --format docbook failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ for format in "xhtml" "epub" "docbook" "chunked" "htmlhelp" "manpage"
+ a2x -v -f chunked -D ./tmp/ common/test.adoc
a2x: args: ['-v', '-f', 'chunked', '-D', './tmp/', 'common/test.adoc']
a2x: resource files: []
a2x: resource directories: ['/etc/asciidoc/images', '/etc/asciidoc/stylesheets']
a2x: executing: "/usr/bin/asciidoc.py" --backend docbook -a "a2x-format=chunked"  --verbose  --out-file "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml" "/root/mugen/testcases/cli-test/asciidoc/common/test.adoc"

asciidoc: reading: /etc/asciidoc/asciidoc.conf
asciidoc: reading: /root/mugen/testcases/cli-test/asciidoc/common/test.adoc
asciidoc: reading: /etc/asciidoc/docbook45.conf
asciidoc: reading: /etc/asciidoc/filters/source/source-highlight-filter.conf
asciidoc: reading: /etc/asciidoc/filters/graphviz/graphviz-filter.conf
asciidoc: reading: /etc/asciidoc/filters/latex/latex-filter.conf
asciidoc: reading: /etc/asciidoc/filters/music/music-filter.conf
asciidoc: reading: /etc/asciidoc/filters/code/code-filter.conf
asciidoc: reading: /etc/asciidoc/lang-en.conf
asciidoc: writing: /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml

a2x: executing: "xmllint" --nonet --noout --valid "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"


a2x: creating /root/mugen/testcases/cli-test/asciidoc/tmp/test.chunked
a2x: chdir /root/mugen/testcases/cli-test/asciidoc/tmp
a2x: executing: "xsltproc"  --stringparam callout.graphics 0 --stringparam navig.graphics 0 --stringparam admon.textlabel 1 --stringparam admon.graphics 0  --stringparam base.dir "test.chunked/" "/etc/asciidoc/docbook-xsl/chunked.xsl" "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"

Writing test.chunked/index.html for refentry

a2x: chdir /root/mugen/testcases/cli-test/asciidoc
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.chunked/index.html
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.chunked/index.html
a2x: copying "/etc/asciidoc/stylesheets/docbook-xsl.css" to "/root/mugen/testcases/cli-test/asciidoc/tmp/test.chunked/docbook-xsl.css"
a2x: deleting /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml
+ CHECK_RESULT 0 0 0 'Check a2x -f chunked failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -f chunked failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --format chunked -D ./tmp/ common/test.adoc
+ CHECK_RESULT 0 0 0 'Check a2x --format chunked failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --format chunked failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ for format in "xhtml" "epub" "docbook" "chunked" "htmlhelp" "manpage"
+ a2x -v -f htmlhelp -D ./tmp/ common/test.adoc
a2x: args: ['-v', '-f', 'htmlhelp', '-D', './tmp/', 'common/test.adoc']
a2x: resource files: []
a2x: resource directories: ['/etc/asciidoc/images', '/etc/asciidoc/stylesheets']
a2x: executing: "/usr/bin/asciidoc.py" --backend docbook -a "a2x-format=htmlhelp"  --verbose  --out-file "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml" "/root/mugen/testcases/cli-test/asciidoc/common/test.adoc"

asciidoc: reading: /etc/asciidoc/asciidoc.conf
asciidoc: reading: /root/mugen/testcases/cli-test/asciidoc/common/test.adoc
asciidoc: reading: /etc/asciidoc/docbook45.conf
asciidoc: reading: /etc/asciidoc/filters/source/source-highlight-filter.conf
asciidoc: reading: /etc/asciidoc/filters/graphviz/graphviz-filter.conf
asciidoc: reading: /etc/asciidoc/filters/latex/latex-filter.conf
asciidoc: reading: /etc/asciidoc/filters/music/music-filter.conf
asciidoc: reading: /etc/asciidoc/filters/code/code-filter.conf
asciidoc: reading: /etc/asciidoc/lang-en.conf
asciidoc: writing: /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml

a2x: executing: "xmllint" --nonet --noout --valid "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"


a2x: creating /root/mugen/testcases/cli-test/asciidoc/tmp/test.htmlhelp
a2x: chdir /root/mugen/testcases/cli-test/asciidoc/tmp
a2x: executing: "xsltproc"  --stringparam callout.graphics 0 --stringparam navig.graphics 0 --stringparam admon.textlabel 1 --stringparam admon.graphics 0 --stringparam htmlhelp.chm "test.chm" --stringparam htmlhelp.hhp "test.hhp" --stringparam htmlhelp.hhk "test.hhk" --stringparam htmlhelp.hhc "test.hhc"  --stringparam base.dir "test.htmlhelp/" "/etc/asciidoc/docbook-xsl/htmlhelp.xsl" "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"

Writing test.htmlhelp/index.html for refentry
Writing test.hhp
Writing test.hhc

a2x: chdir /root/mugen/testcases/cli-test/asciidoc
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.htmlhelp/index.html
a2x: finding resources in: /root/mugen/testcases/cli-test/asciidoc/tmp/test.htmlhelp/index.html
a2x: copying "/etc/asciidoc/stylesheets/docbook-xsl.css" to "/root/mugen/testcases/cli-test/asciidoc/tmp/test.htmlhelp/docbook-xsl.css"
a2x: deleting /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml
+ CHECK_RESULT 0 0 0 'Check a2x -f htmlhelp failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -f htmlhelp failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --format htmlhelp -D ./tmp/ common/test.adoc
+ CHECK_RESULT 0 0 0 'Check a2x --format htmlhelp failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --format htmlhelp failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ for format in "xhtml" "epub" "docbook" "chunked" "htmlhelp" "manpage"
+ a2x -v -f manpage -D ./tmp/ common/test.adoc
a2x: args: ['-v', '-f', 'manpage', '-D', './tmp/', 'common/test.adoc']
a2x: resource files: []
a2x: resource directories: ['/etc/asciidoc/images', '/etc/asciidoc/stylesheets']
a2x: executing: "/usr/bin/asciidoc.py" --backend docbook -a "a2x-format=manpage"  --doctype manpage --verbose  --out-file "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml" "/root/mugen/testcases/cli-test/asciidoc/common/test.adoc"

asciidoc: reading: /etc/asciidoc/asciidoc.conf
asciidoc: reading: /root/mugen/testcases/cli-test/asciidoc/common/test.adoc
asciidoc: reading: /etc/asciidoc/docbook45.conf
asciidoc: reading: /etc/asciidoc/filters/source/source-highlight-filter.conf
asciidoc: reading: /etc/asciidoc/filters/graphviz/graphviz-filter.conf
asciidoc: reading: /etc/asciidoc/filters/latex/latex-filter.conf
asciidoc: reading: /etc/asciidoc/filters/music/music-filter.conf
asciidoc: reading: /etc/asciidoc/filters/code/code-filter.conf
asciidoc: reading: /etc/asciidoc/lang-en.conf
asciidoc: writing: /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml

a2x: executing: "xmllint" --nonet --noout --valid "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"


a2x: chdir /root/mugen/testcases/cli-test/asciidoc/tmp
a2x: executing: "xsltproc"  --stringparam callout.graphics 0 --stringparam navig.graphics 0 --stringparam admon.textlabel 1 --stringparam admon.graphics 0  "/etc/asciidoc/docbook-xsl/manpage.xsl" "/root/mugen/testcases/cli-test/asciidoc/tmp/test.xml"

Warn: AUTHOR sect.: no personblurb|contrib for yangshicheng        HELLO WORLD
Note: AUTHOR sect.: see http://www.docbook.org/tdg5/en/html/contr  HELLO WORLD
Note: AUTHOR sect.: see http://www.docbook.org/tdg5/en/html/perso  HELLO WORLD
Note: Writing HELLO_WORLD.1

a2x: chdir /root/mugen/testcases/cli-test/asciidoc
a2x: deleting /root/mugen/testcases/cli-test/asciidoc/tmp/test.xml
+ CHECK_RESULT 0 0 0 'Check a2x -f manpage failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -f manpage failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --format manpage -D ./tmp/ common/test.adoc
+ CHECK_RESULT 0 0 0 'Check a2x --format manpage failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --format manpage failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --fop -f pdf -D ./tmp/ common/test.adoc
a2x: WARNING: --destination-dir option is only applicable to HTML and manpage based outputs

+ CHECK_RESULT 0 0 0 'Check a2x -f pdf failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -f pdf failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x --fop -f pdf -D ./tmp/ common/test.adoc
a2x: WARNING: --destination-dir option is only applicable to HTML and manpage based outputs

+ CHECK_RESULT 0 0 0 'Check a2x --format pdf failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --format pdf failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x -f xhtml --copy -D ./tmp/ common/test.adoc
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x --copy failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --copy failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x -f xhtml --safe -D ./tmp/ common/test.adoc
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x --safe failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --safe failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x -f xhtml -s -D ./tmp/ common/test.adoc
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x -s failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x -s failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ a2x -f xhtml --skip-asciidoc -D ./tmp/ common/test.adoc
+ test -f ./tmp/test.html
+ CHECK_RESULT 0 0 0 'Check a2x --skip-asciidoc failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check a2x --skip-asciidoc failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End to run test.'
+ message='End to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to run test.'
Wed Jul 19 03:25:27 2023 - INFO  - End to run test.
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Wed Jul 19 03:25:28 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Wed Jul 19 03:25:29 2023 - INFO  - Start to restore the test environment.
+ rm -rf ./tmp
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmpb4drcvpi ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmpb4drcvpi
+ '[' 0 -ne 0 ']'
+ LOG_INFO 'End to restore the test environment.'
+ message='End to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to restore the test environment.'
Wed Jul 19 03:26:29 2023 - INFO  - End to restore the test environment.
