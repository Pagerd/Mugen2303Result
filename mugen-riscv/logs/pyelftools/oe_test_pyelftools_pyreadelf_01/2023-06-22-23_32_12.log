+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start environmental preparation.'
+ message='Start environmental preparation.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start environmental preparation.'
Thu Jun 22 23:32:20 2023 - INFO  - Start environmental preparation.
+ DNF_INSTALL python3-pyelftools
+ pkgs=python3-pyelftools
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs python3-pyelftools --node 1 --tempfile ''
+ tmpfile2=/tmp/tmppcg8mzvz
+ '[' -z '' ']'
+ tmpfile=/tmp/tmppcg8mzvz
+ cp ./common/sample_exe64.elf ./
+ LOG_INFO 'End of environmental preparation!'
+ message='End of environmental preparation!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of environmental preparation!'
Thu Jun 22 23:33:40 2023 - INFO  - End of environmental preparation!
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Thu Jun 22 23:33:42 2023 - INFO  - Start to run test.
+ pyreadelf -v
+ grep '[[:digit:]]'
readelf.py: based on pyelftools 0.29
+ CHECK_RESULT 0 0 0 'Check pyreadelf -v  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf -v  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf --version
+ grep '[[:digit:]]'
readelf.py: based on pyelftools 0.29
+ CHECK_RESULT 0 0 0 'Check pyreadelf --version  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf --version  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf -d sample_exe64.elf
+ grep 'Dynamic section'
Dynamic section at offset 0xe40 contains 21 entries:
+ CHECK_RESULT 0 0 0 'Check pyreadelf -d sample_exe64.elf  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf -d sample_exe64.elf  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf --dynamic sample_exe64.elf
+ grep 'Dynamic section'
Dynamic section at offset 0xe40 contains 21 entries:
+ CHECK_RESULT 0 0 0 'Check pyreadelf --dynamic sample_exe64.elf  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf --dynamic sample_exe64.elf  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf -H
+ grep 'usage: readelf.py'
usage: usage: readelf.py [options] <elf-file>
+ CHECK_RESULT 0 0 0 'Check pyreadelf -H  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf -H  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ grep 'usage: readelf.py'
+ pyreadelf --help
usage: usage: readelf.py [options] <elf-file>
+ CHECK_RESULT 0 0 0 'Check pyreadelf --help  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf --help  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf -h sample_exe64.elf
+ grep Class
  Class:                             ELF64
+ CHECK_RESULT 0 0 0 'Check pyreadelf -h sample_exe64.elf  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf -h sample_exe64.elf  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf --file-header sample_exe64.elf
+ grep Class
  Class:                             ELF64
+ CHECK_RESULT 0 0 0 'Check pyreadelf --file-header sample_exe64.elf  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf --file-header sample_exe64.elf  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf -l sample_exe64.elf
+ grep PHDR
  PHDR           0x0000000000000040 0x0000000000400040 0x0000000000400040
+ CHECK_RESULT 0 0 0 'Check pyreadelf -l sample_exe64.elf  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf -l sample_exe64.elf  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ pyreadelf --program-headers sample_exe64.elf
+ grep PHDR
  PHDR           0x0000000000000040 0x0000000000400040 0x0000000000400040
+ CHECK_RESULT 0 0 0 'Check pyreadelf --program-headers sample_exe64.elf  failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check pyreadelf --program-headers sample_exe64.elf  failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Thu Jun 22 23:34:32 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Thu Jun 22 23:34:33 2023 - INFO  - Start to restore the test environment.
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmppcg8mzvz ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmppcg8mzvz
+ '[' 0 -ne 0 ']'
+ rm -rf sample_exe64.elf
+ LOG_INFO 'Finish restoring the test environment.'
+ message='Finish restoring the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish restoring the test environment.'
Thu Jun 22 23:35:02 2023 - INFO  - Finish restoring the test environment.
