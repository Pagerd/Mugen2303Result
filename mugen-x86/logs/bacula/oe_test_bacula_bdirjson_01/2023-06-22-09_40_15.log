+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Thu Jun 22 09:40:16 2023 - INFO  - Start to prepare the test environment.
+ OLD_LANG=en_US.UTF-8
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ DNF_INSTALL 'bacula-common tar'
+ pkgs='bacula-common tar'
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs 'bacula-common tar' --node 1 --tempfile ''
+ tmpfile2=/tmp/tmpyj6xfkg_
+ '[' -z '' ']'
+ tmpfile=/tmp/tmpyj6xfkg_
+ tar -zxvf common/test.tar.gz
config/
config/a.config
config/4.conf
config/3.conf
config/2.conf
config/6.conf
config/5.conf
config/1.conf
config/e.conf
+ LOG_INFO 'End to prepare the test environment.'
+ message='End to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment.'
Thu Jun 22 09:41:27 2023 - INFO  - End to prepare the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Thu Jun 22 09:41:27 2023 - INFO  - Start to run test.
+ bdirjson -v
+ grep bacula-dir
    "Name": "bacula-dir",
+ CHECK_RESULT 0 0 0 'test bdirjson -v failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -v failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -t /etc/bacula/bacula-dir.conf
+ CHECK_RESULT 0 0 0 'test bdirjson -t failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -t failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -v -r JobDefs /etc/bacula/bacula-dir.conf
+ grep JobDefs
  "JobDefs": {
+ CHECK_RESULT 0 0 0 'test bdirjson -r failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -r failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -v -r JobDefs -l Type /etc/bacula/bacula-dir.conf
+ grep Type
    "Type": "Backup"
+ CHECK_RESULT 0 0 0 'test bdirjson -l failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -l failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -v -n Standard /etc/bacula/bacula-dir.conf
+ grep '"Name": "Standard"'
    "Name": "Standard",
+ CHECK_RESULT 0 0 0 'test bdirjson -n failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -n failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -v -D /etc/bacula/bacula-dir.conf
+ grep '"Name": "Daemon"'
    "Name": "Daemon",
+ CHECK_RESULT 0 0 0 'test bdirjson -D failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -D failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -v -c /etc/bacula/bacula-dir.conf ./config/a.config
+ grep DefaultJob11
    "Name": "DefaultJob11",
+ CHECK_RESULT 0 0 0 'test bdirjson -c failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -c failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -v -d 19 /etc/bacula/bacula-dir.conf
+ grep 'Debug level = 19'
bacula-dir: bdirjson.c:175-0 Debug level = 19
+ CHECK_RESULT 0 0 0 'test bdirjson -d failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -d failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ bdirjson -v '-?' /etc/bacula/bacula-dir.conf
+ grep Usage:
Usage: bdirjson [<options>] [config_file]
+ CHECK_RESULT 0 0 0 'test bdirjson -? failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='test bdirjson -? failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End to run test.'
+ message='End to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to run test.'
Thu Jun 22 09:41:28 2023 - INFO  - End to run test.
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Thu Jun 22 09:41:28 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Thu Jun 22 09:41:28 2023 - INFO  - Start to restore the test environment.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmpyj6xfkg_ ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmpyj6xfkg_
+ '[' 0 -ne 0 ']'
+ rm -rf config/
+ LOG_INFO 'End to restore the test environment.'
+ message='End to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to restore the test environment.'
Thu Jun 22 09:41:38 2023 - INFO  - End to restore the test environment.
