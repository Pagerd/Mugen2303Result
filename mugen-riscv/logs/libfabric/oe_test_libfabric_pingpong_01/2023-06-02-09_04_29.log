+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Fri Jun  2 09:04:32 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL libfabric
+ pkgs=libfabric
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs libfabric --node 1 --tempfile ''
+ tmpfile2=/tmp/tmp8u4rbnf9
+ '[' -z '' ']'
+ tmpfile=/tmp/tmp8u4rbnf9
+ P_SSH_CMD --node 2 --cmd 'dnf -y install libfabric'
+ python3 /root/mugen/libs/locallibs/ssh_cmd.py --node 2 --cmd 'dnf -y install libfabric'
Fri Jun  2 09:05:12 2023 - ERROR - You need to check the environment configuration file to see if this node information exists.
+ LOG_INFO 'End to prepare the test environment.'
+ message='End to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment.'
Fri Jun  2 09:05:13 2023 - INFO  - End to prepare the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Fri Jun  2 09:05:14 2023 - INFO  - Start to run test.
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -B -I -S -c -m failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -B -I -S -c -m failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ fi_pingpong -p usnic -B 47592 -I 10 -S 1024
+ test 0x '!=' 0x
+ return 0
+ echo P_SSH_CMD --node 2 --cmd 'fi_pingpong -B 47592 -I 10 -S all -c -m msg '
P_SSH_CMD --node 2 --cmd fi_pingpong -B 47592 -I 10 -S all -c -m msg 
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -B -I -S -c -m failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -B -I -S -c -m failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -B -I -S -c -m failed'
+ actual_result=0
+ fi_pingpong -P 47592 -p -d -e -m msg
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -B -I -S -c -m failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ echo P_SSH_CMD --node 2 --cmd 'fi_pingpong -p verbs -e msg -v -m host '
P_SSH_CMD --node 2 --cmd fi_pingpong -p verbs -e msg -v -m host 
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -p -e -v -m failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -p -e -v -m failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -B -I -S -c -m failed'
+ fi_pingpong -P 47592 -p sockets
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -B -I -S -c -m failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ echo P_SSH_CMD --node 2 --cmd 'fi_pingpong -P 47592 -p sockets '
P_SSH_CMD --node 2 --cmd fi_pingpong -P 47592 -p sockets 
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -P -p failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -P -p failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -p failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -p failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ echo P_SSH_CMD --node 2 --cmd 'fi_pingpong -p sockets '
P_SSH_CMD --node 2 --cmd fi_pingpong -p sockets 
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -p failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -p failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
Unknown endpoint : -m
+ test 0x '!=' 0x
+ return 0
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -e -v failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='Check fi_pingpong -e -v failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ echo P_SSH_CMD --node 2 --cmd 'fi_pingpong -p verbs -e msg -v host '
P_SSH_CMD --node 2 --cmd fi_pingpong -p verbs -e msg -v host 
+ CHECK_RESULT 0 0 0 'Check fi_pingpong -p -e -v failed'
+ actual_result=0
+ expect_result=0
+ mode=0
+ fi_pingpong -p verbs -e msg -v
+ error_log='Check fi_pingpong -p -e -v failed'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End of the test.'
+ message='End of the test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of the test.'
+ fi_pingpong -p sockets
bind(): util/pingpong.c:456 , ret=-98 (Address already in use)
[debug] util/pingpong.c:278 :  * PingPong options:
[debug] util/pingpong.c:279 :   - src_port            : [0]
[debug] util/pingpong.c:280 :   - dst_addr            : [None]
[debug] util/pingpong.c:281 :   - dst_port            : [0]
[debug] util/pingpong.c:282 :   - sizes_enabled       : default size = 64
[debug] util/pingpong.c:283 :   - iterations          : default iterations: 10
[debug] util/pingpong.c:285 :   - provider            : verbs
[debug] util/pingpong.c:2240: Selected endpoint: MSG
[debug] util/pingpong.c:502 : Initializing control messages
bind(): util/pingpong.c:456 , ret=-98 (Address already in use)
bind(): util/pingpong.c:456 , ret=-98 (Address already in use)
[debug] util/pingpong.c:1869: Freeing resources of test suite
[debug] util/pingpong.c:1903: Resources of test suite freed
Fri Jun  2 09:05:14 2023 - INFO  - End of the test.
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Fri Jun  2 09:05:15 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Fri Jun  2 09:05:16 2023 - INFO  - Start to restore the test environment.
+ ps -ef
+ grep fi_pingpong
+ grep -v grep
+ xargs kill -9
+ awk '{print $2}'
oe_test_libfabric_pingpong_01.sh: line 53:  1093 Killed                  fi_pingpong -p usnic -B 47592 -I 10 -S 1024
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmp8u4rbnf9 ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmp8u4rbnf9
+ '[' 0 -ne 0 ']'
+ P_SSH_CMD --node 2 --cmd 'ps -ef | grep fi_pingpong | grep -v grep | awk '\''{print }'\'' | xargs kill -9 && dnf -y remove libfabric'
+ python3 /root/mugen/libs/locallibs/ssh_cmd.py --node 2 --cmd 'ps -ef | grep fi_pingpong | grep -v grep | awk '\''{print }'\'' | xargs kill -9 && dnf -y remove libfabric'
Fri Jun  2 09:05:34 2023 - ERROR - You need to check the environment configuration file to see if this node information exists.
+ LOG_INFO 'End to restore the test environment.'
+ message='End to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to restore the test environment.'
Fri Jun  2 09:05:35 2023 - INFO  - End to restore the test environment.
