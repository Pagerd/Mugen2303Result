+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment.'
+ message='Start to prepare the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment.'
Fri May  5 05:03:17 2023 - INFO  - Start to prepare the test environment.
+ DNF_INSTALL targetcli
+ pkgs=targetcli
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs targetcli --node 1 --tempfile ''
+ tmpfile2=/tmp/tmp2aje6q0k
+ '[' -z '' ']'
+ tmpfile=/tmp/tmp2aje6q0k
+ LOG_INFO 'Finish preparing the test environment.'
+ message='Finish preparing the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish preparing the test environment.'
Fri May  5 05:03:39 2023 - INFO  - Finish preparing the test environment.
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test.'
+ message='Start to run test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test.'
Fri May  5 05:03:40 2023 - INFO  - Start to run test.
+ expect
spawn targetcli
targetcli shell version 2.1.54
Copyright 2011-2013 by Datera, Inc and others.
For help on commands, type 'help'.
[0m
/> iscsi/ create
[32mCreated target iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.b58b6286c851.[0m[0m
[32mCreated TPG 1.[0m[0m
[32mGlobal pref auto_add_default_portal=true[0m[0m
[32mCreated default portal listening on all IPs (0.0.0.0), port 3260.[0m[0m
/> backstores/fileio create disk1 /disks 140M
[32mCreated fileio disk1 with size 146800640[0m[0m
/> help set

SYNTAX
======
set [group] [parameter=value...] 


DESCRIPTION
===========

Sets one or more configuration parameters in the given group.
The global group contains all global CLI preferences.
Other groups are specific to the current path.

Run with no parameter nor group to list all available groups, or
with just a group name to list all available parameters within that
group.

Example: set global color_mode=true loglevel_console=info

SEE ALSO
========
get

/> get global auto_save_on_exit
auto_save_on_exit=true [0m
/> set global auto_save_on_exit=false
Parameter auto_save_on_exit is now 'false'.[0m
/> help saveconfig

SYNTAX
======
saveconfig [savefile] 


DEFAULT VALUES
==============
savefile=/etc/target/saveconfig.json 


DESCRIPTION
===========

Saves the current configuration to a file so that it can be restored
on next boot.

/> saveconfig ./saveconfig.json
[32mConfiguration saved to ./saveconfig.json[0m[0m
/> set global auto_save_on_exit=true
Parameter auto_save_on_exit is now 'true'.[0m
/> get global auto_save_on_exit
auto_save_on_exit=true [0m
/> exit
[32mGlobal pref auto_save_on_exit=true[0m[0m
[32mConfiguration saved to /etc/target/saveconfig.json[0m[0m
+ grep -E 'Created fileio disk1 with size|Deleted storage object disk1|set \[group\] \[parameter=value...\]|auto_save_on_exit=true|Parameter auto_save_on_exit is now '\''false'\''|auto_save_on_exit=false|Parameter auto_save_on_exit is now '\''true'\''' target_log9
[32mCreated fileio disk1 with size 146800640[0m[0m
set [group] [parameter=value...] 
auto_save_on_exit=true [0m
/> set global auto_save_on_exit=false
Parameter auto_save_on_exit is now 'false'.[0m
/> set global auto_save_on_exit=true
Parameter auto_save_on_exit is now 'true'.[0m
auto_save_on_exit=true [0m
[32mGlobal pref auto_save_on_exit=true[0m[0m
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ grep -E 'saveconfig \[savefile\]|Saves the current configuration to a file so that it can be restored|Configuration saved to ./saveconfig.json' target_log9
saveconfig [savefile] 
Saves the current configuration to a file so that it can be restored
[32mConfiguration saved to ./saveconfig.json[0m[0m
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ grep -E 'disk1|iqn.2003-01' ./saveconfig.json
      "name": "disk1",
      "wwn": "iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.b58b6286c851"
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
++ targetcli ls
++ grep iqn.2003-01
++ awk -F ' ' '{print $3}'
+ iscsiName=iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.b58b6286c851
+ expect
spawn targetcli
targetcli shell version 2.1.54
Copyright 2011-2013 by Datera, Inc and others.
For help on commands, type 'help'.
[0m
/> iscsi/ delete iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.b58b6286c851
[32mDeleted Target iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.b58b6286c851.[0m[0m
/> backstores/fileio/ delete disk1
[32mDeleted storage object disk1.[0m[0m
/> exit
[32mGlobal pref auto_save_on_exit=true[0m[0m
[32mLast 10 configs saved in /etc/target/backup/.[0m[0m
[32mConfiguration saved to /etc/target/saveconfig.json[0m[0m
+ expect
spawn targetcli
targetcli shell version 2.1.54
Copyright 2011-2013 by Datera, Inc and others.
For help on commands, type 'help'.
[0m
/> iscsi/ create
[32mCreated target iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.5efae2dbd3ac.[0m[0m
[32mCreated TPG 1.[0m[0m
[32mGlobal pref auto_add_default_portal=true[0m[0m
[32mCreated default portal listening on all IPs (0.0.0.0), port 3260.[0m[0m
/> backstores/fileio create disk1 /disks 140M
[32m/disks exists, using its size (146800640 bytes) instead[0m[0m
[32mCreated fileio disk1 with size 146800640[0m[0m
/> saveconfig ./saveconfig.json
[32mConfiguration saved to ./saveconfig.json[0m[0m
/> help clearconfig

SYNTAX
======
clearconfig [confirm] 


DESCRIPTION
===========

Removes entire configuration of backstores and targets

/> clearconfig confirm=True
[32mAll configuration cleared[0m[0m
/> exit
[32mGlobal pref auto_save_on_exit=true[0m[0m
[32mLast 10 configs saved in /etc/target/backup/.[0m[0m
[32mConfiguration saved to /etc/target/saveconfig.json[0m[0m
+ grep -E 'Configuration saved to ./saveconfig.json|clearconfig \[confirm\]|Removes entire configuration of backstores and targets|All configuration cleared' target_log10
[32mConfiguration saved to ./saveconfig.json[0m[0m
clearconfig [confirm] 
Removes entire configuration of backstores and targets
[32mAll configuration cleared[0m[0m
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ targetcli ls
+ grep -E 'iqn.2003-01|disk1'
+ CHECK_RESULT 1 1
+ actual_result=1
+ expect_result=1
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 1 ']'
+ '[' 0 -eq 0 ']'
+ test 1x '!=' 1x
+ return 0
+ expect
spawn targetcli
targetcli shell version 2.1.54
Copyright 2011-2013 by Datera, Inc and others.
For help on commands, type 'help'.
[0m
/> help restoreconfig

SYNTAX
======
restoreconfig [savefile] [clear_existing] [target] [storage_object] 


DEFAULT VALUES
==============
savefile=/etc/target/saveconfig.json clear_existing=False 


DESCRIPTION
===========

Restores configuration from a file.

/> restoreconfig ./saveconfig.json
[32mConfiguration restored from ./saveconfig.json[0m[0m
/> exit
[32mGlobal pref auto_save_on_exit=true[0m[0m
[32mConfiguration saved to /etc/target/saveconfig.json[0m[0m
+ grep -E 'restoreconfig \[savefile\] \[clear_existing\]|Restores configuration from a file|Configuration restored from ./saveconfig.json' target_log11
restoreconfig [savefile] [clear_existing] [target] [storage_object] 
Restores configuration from a file.
[32mConfiguration restored from ./saveconfig.json[0m[0m
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ targetcli ls
+ grep -E 'iqn.2003-01|disk1'
  | | o- disk1 .......................................................................... [/disks (140.0MiB) write-back deactivated]
  | o- iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.5efae2dbd3ac ....................................................... [TPGs: 1]
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
++ targetcli ls
++ awk -F ' ' '{print $3}'
++ grep iqn.2003-01
+ iscsiName=iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.5efae2dbd3ac
+ expect
spawn targetcli
targetcli shell version 2.1.54
Copyright 2011-2013 by Datera, Inc and others.
For help on commands, type 'help'.
[0m
/> iscsi/ delete iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.5efae2dbd3ac
[32mDeleted Target iqn.2003-01.org.linux-iscsi.localhost.x8664:sn.5efae2dbd3ac.[0m[0m
/> backstores/fileio/ delete disk1
[32mDeleted storage object disk1.[0m[0m
/> exit
[32mGlobal pref auto_save_on_exit=true[0m[0m
[32mLast 10 configs saved in /etc/target/backup/.[0m[0m
[32mConfiguration saved to /etc/target/saveconfig.json[0m[0m
+ expect
spawn targetcli
targetcli shell version 2.1.54
Copyright 2011-2013 by Datera, Inc and others.
For help on commands, type 'help'.
[0m
/> help sessions

SYNTAX
======
sessions [action] [sid] 


DEFAULT VALUES
==============
action=list 


DESCRIPTION
===========

Displays a detailed list of all open sessions.

PARAMETERS
==========

action
------
The action is one of:
    - `list`` gives a short session list
    - `detail` gives a detailed list

sid
---
You can specify an "sid" to only list this one,
with or without details.

SEE ALSO
========
status

/> sessions
(no open sessions)
[0m/> sessions action=list
(no open sessions)
[0m/> exit
[32mGlobal pref auto_save_on_exit=true[0m[0m
[32mLast 10 configs saved in /etc/target/backup/.[0m[0m
[32mConfiguration saved to /etc/target/saveconfig.json[0m[0m
+ grep -E 'sessions \[action\] \[sid\]|Displays a detailed list of all open sessions|\(no open sessions\)' target_log12
sessions [action] [sid] 
Displays a detailed list of all open sessions.
(no open sessions)
(no open sessions)
+ CHECK_RESULT 0
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log=
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End of the test.'
+ message='End of the test.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of the test.'
Fri May  5 05:04:13 2023 - INFO  - End of the test.
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Fri May  5 05:04:14 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'Start to restore the test environment.'
+ message='Start to restore the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to restore the test environment.'
Fri May  5 05:04:14 2023 - INFO  - Start to restore the test environment.
++ ls
++ grep -v .sh
+ rm -rf saveconfig.json target_log10 target_log11 target_log12 target_log9
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmp2aje6q0k ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmp2aje6q0k
+ '[' 0 -ne 0 ']'
+ LOG_INFO 'Finish restoring the test environment.'
+ message='Finish restoring the test environment.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish restoring the test environment.'
Fri May  5 05:04:22 2023 - INFO  - Finish restoring the test environment.
