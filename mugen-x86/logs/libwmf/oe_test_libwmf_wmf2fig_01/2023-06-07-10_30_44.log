+ source /root/mugen/libs/locallibs/common_lib.sh
++ python3 --version
++ '[' 0 -eq 0 ']'
++ source /root/mugen/libs/locallibs/common_lib_python.sh
+ main
++ type -t post_test
+ '[' -n function ']'
+ trap post_test EXIT INT HUP TERM
+ rpm -qa
+ grep expect
++ type -t config_params
+ '[' -n '' ']'
++ type -t pre_test
+ '[' -n function ']'
+ pre_test
+ LOG_INFO 'Start to prepare the test environment!'
+ message='Start to prepare the test environment!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to prepare the test environment!'
Wed Jun  7 10:30:46 2023 - INFO  - Start to prepare the test environment!
+ DNF_INSTALL libwmf
+ pkgs=libwmf
+ node=1
+ '[' -z '' ']'
+ tmpfile=
++ python3 /root/mugen/libs/locallibs/rpm_manage.py install --pkgs libwmf --node 1 --tempfile ''
+ tmpfile2=/tmp/tmp9zlo3ern
+ '[' -z '' ']'
+ tmpfile=/tmp/tmp9zlo3ern
+ for i in {1..10}
+ cp -f ./common/ant.wmf test1.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test2.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test3.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test4.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test5.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test6.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test7.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test8.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test9.wmf
+ for i in {1..10}
+ cp -f ./common/ant.wmf test10.wmf
+ LOG_INFO 'End to prepare the test environment!'
+ message='End to prepare the test environment!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End to prepare the test environment!'
Wed Jun  7 10:31:09 2023 - INFO  - End to prepare the test environment!
++ type -t run_test
+ '[' -n function ']'
+ run_test
+ LOG_INFO 'Start to run test'
+ message='Start to run test'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Start to run test'
Wed Jun  7 10:31:09 2023 - INFO  - Start to run test
+ wmf2fig --figunit=1300 --auto test1.wmf
+ cat test1.fig
+ grep FIG
#FIG 3.2
+ CHECK_RESULT 0 0 0 'option --figunit error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --figunit error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --page=A3 --auto test2.wmf
+ cat test2.fig
+ grep A3
A3
+ CHECK_RESULT 0 0 0 'option --page error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --page error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --landscape --auto test3.wmf
+ cat test3.fig
+ grep Landscape
Landscape
+ CHECK_RESULT 0 0 0 'option --landscape error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --landscape error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --portrait --auto test4.wmf
+ cat test4.fig
+ grep Portrait
Portrait
+ CHECK_RESULT 0 0 0 'option --portrait error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --portrait error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --maxpect --auto test5.wmf
+ cat test5.fig
+ grep draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
+ CHECK_RESULT 0 0 0 'option --maxpect error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --maxpect error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --no-margins --auto test6.wmf
+ cat test6.fig
+ grep polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
+ CHECK_RESULT 0 0 0 'option --no-margins error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --no-margins error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --flat --auto test7.wmf
+ cat test7.fig
+ grep polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
# wmf_[fig_]draw_polygon
# end draw_polygon
+ CHECK_RESULT 0 0 0 'option --flat error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --flat error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --image=eps --auto test8.wmf
+ test -e test8.fig
+ CHECK_RESULT 0 0 0 'option --image error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --image error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --title=test --creator=author --date=7月18日 --auto test9.wmf
+ cat test9.fig
+ grep test
# Title: test
+ CHECK_RESULT 0 0 0 'option --title --creator --date error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --title --creator --date error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ wmf2fig --for=you --auto test10.wmf
+ cat test10.fig
+ grep For
# For: you
+ CHECK_RESULT 0 0 0 'option --for error'
+ actual_result=0
+ expect_result=0
+ mode=0
+ error_log='option --for error'
+ exit_mode=0
+ '[' -z 0 ']'
+ '[' 0 -eq 0 ']'
+ test 0x '!=' 0x
+ return 0
+ LOG_INFO 'End of test'
+ message='End of test'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'End of test'
Wed Jun  7 10:31:10 2023 - INFO  - End of test
+ CASE_RESULT 0
+ case_re=0
+ test -z ''
+ test 0 -eq 0
+ LOG_INFO 'succeed to execute the case.'
+ message='succeed to execute the case.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'succeed to execute the case.'
Wed Jun  7 10:31:10 2023 - INFO  - succeed to execute the case.
+ exec_result=
+ exit 0
+ post_test
+ LOG_INFO 'start environment cleanup.'
+ message='start environment cleanup.'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'start environment cleanup.'
Wed Jun  7 10:31:11 2023 - INFO  - start environment cleanup.
+ DNF_REMOVE
+ node=1
+ pkg_list=
+ mode=0
+ [[ -z /tmp/tmp9zlo3ern ]]
+ '[' 0 -ne 0 ']'
+ '[' 1 == 0 ']'
+ python3 /root/mugen/libs/locallibs/rpm_manage.py remove --node 1 --pkgs '' --tempfile /tmp/tmp9zlo3ern
+ '[' 0 -ne 0 ']'
+ rm -rf ./test10.fig ./test10.wmf ./test1.fig ./test1.wmf ./test2.fig ./test2.wmf ./test3.fig ./test3.wmf ./test4.fig ./test4.wmf ./test5.fig ./test5.wmf ./test6.fig ./test6.wmf ./test7.fig ./test7.wmf ./test8.fig ./test8.wmf ./test9.fig ./test9.wmf
+ LOG_INFO 'Finish environment cleanup!'
+ message='Finish environment cleanup!'
+ python3 /root/mugen/libs/locallibs/mugen_log.py --level info --message 'Finish environment cleanup!'
Wed Jun  7 10:31:17 2023 - INFO  - Finish environment cleanup!
